package com.data.display.util;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;

/**
 * 模块: ${DESCRIPTION}
 * 用途: ${DESCRIPTION}
 * 作者: lianan
 * 创建日期: 2016/12/5
 * 修改人: lianan
 * 修改日期: 2016/12/5
 * 版权: Copyright (c) 2014-2029 ELINE,Corp.
 */
public class QRCodeUtil {

    public void createQRCodeImg(String contents) throws WriterException, IOException {
        Map<EncodeHintType, Object> hints = new HashMap<EncodeHintType, Object>();
        hints.put(EncodeHintType.MARGIN, 0);
        contents = new String(contents.getBytes("UTF-8"), "ISO-8859-1");
        BitMatrix bitMatrix = new QRCodeWriter().encode(contents,
                BarcodeFormat.QR_CODE, 256, 256, hints);
        int width = bitMatrix.getWidth();
        int height = bitMatrix.getHeight();
        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        for (int x = 0; x < width; x++) {
            for (int y = 0; y < height; y++) {
                image.setRGB(x, y, bitMatrix.get(x, y) == true ?
                        Color.BLACK.getRGB() : Color.WHITE.getRGB());
            }
        }
//        ImageIO.write(image, "png", new File("/Users/lianan/Desktop/" + contents.replaceAll("/", "") + ".png"));
           ImageIO.write(image, "png", new File("D:\\" + "1.png"));
    }


    /**
     * 生成图片流
     *
     * @param contents
     * @return
     * @throws WriterException
     * @throws IOException
     */
    public BufferedImage getQRCodeImg(String contents, String path) throws WriterException, IOException {
        Map<EncodeHintType, Object> hints = new HashMap<EncodeHintType, Object>();
        hints.put(EncodeHintType.MARGIN, 0);
        contents = new String(contents.getBytes("UTF-8"), "ISO-8859-1");
        BitMatrix bitMatrix = new QRCodeWriter().encode(contents,
                BarcodeFormat.QR_CODE, 256, 256, hints);
        int width = bitMatrix.getWidth();
        int height = bitMatrix.getHeight();
        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        for (int x = 0; x < width; x++) {
            for (int y = 0; y < height; y++) {
                image.setRGB(x, y, bitMatrix.get(x, y) == true ?
                        Color.BLACK.getRGB() : Color.WHITE.getRGB());
            }
        }
        ImageIO.write(image, "png", new File(path));
        return image;
    }

    public static void main(String[] args) throws IOException, WriterException {
//        String shanxi [] =new String[]{};
//        String xianzhi [] =new String[]{"ELES1501000184","ELES1501000185","ELES1501000186","ELES1501000187","ELES1501000188","ELES1501000189","ELES150100018A","ELES150100018B","ELES150100018C","ELES150100018D","ELES150100018E","ELES150100018F","ELES1501000190","ELES1501000191","ELES1501000192","ELES1501000193","ELES1501000194","ELES1501000195","ELES1501000196","ELES1501000197","ELES1501000198","ELES1501000199","ELES150100019A","ELES150100019B","ELES150100019C","ELES150100019D","ELES150100019E","ELES150100019F","ELES15010001A0","ELES15010001A1","ELES15010001A2","ELES15010001A3","ELES15010001A4","ELES15010001A5","ELES15010001A6","ELES15010001A7","ELES15010001A8","ELES15010001A9","ELES15010001AA","ELES15010001AB","ELES15010001AC","ELES15010001AD","ELES15010001AE","ELES15010001AF","ELES15010001B0","ELES15010001B1","ELES15010001B2","ELES15010001B3","ELES15010001B4","ELES15010001B5","ELES15010001B6","ELES15010001B7","ELES15010001B8","ELES15010001B9","ELES15010001BA","ELES15010001BB","ELES15010001BC","ELES15010001BD","ELES15010001BE","ELES15010001BF","ELES15010001C0","ELES15010001C1","ELES15010001C2","ELES15010001C3","ELES15010001C4","ELES15010001C5","ELES15010001C6","ELES15010001C7","ELES15010001C8","ELES15010001C9","ELES15010001CA","ELES15010001CB","ELES15010001CC","ELES15010001CD","ELES15010001CE","ELES15010001CF","ELES15010001D0","ELES15010001D1","ELES15010001D2","ELES15010001D3","ELES15010001D4","ELES15010001D5","ELES15010001D6","ELES15010001D7","ELES15010001D8","ELES15010001D9","ELES15010001DA","ELES15010001DB","ELES15010001DC","ELES15010001DD","ELES15010001DE","ELES15010001DF","ELES15010001E0","ELES15010001E1","ELES15010001E2","ELES15010001E3","ELES15010001E4","ELES15010001E5","ELES15010001E6","ELES15010001E7"};
//        String shandong[] =new String[]{"ELEM25010000D0","ELEM25010000D1","ELEM25010000D2","ELEM25010000D3","ELEM25010000D4","ELEM25010000D5","ELEM25010000D6","ELEM25010000D7","ELEM25010000D8","ELEM25010000D9","ELEM25010000DA","ELEM25010000DB","ELEM25010000DC","ELEM25010000DD","ELEM25010000DE","ELEM25010000DF","ELEM25010000E0","ELEM25010000E1","ELEM25010000E2","ELEM25010000E3"};
//        String wuhan[] =new String[]{"ELEM25010000E4","ELEM25010000E5","ELEM25010000E6","ELEM25010000E7","ELEM25010000E8","ELEM25010000E9","ELEM25010000EA","ELEM25010000EB","ELEM25010000EC","ELEM25010000ED","ELEM25010000EE","ELEM25010000EF","ELEM25010000F0","ELEM25010000F1","ELEM25010000F2","ELEM25010000F3","ELEM25010000F4","ELEM25010000F5","ELEM25010000F6","ELEM25010000F7"};
//        String xianzhi1201[] = new String[]{};
//        for(String code:xianzhi1201){
//            new QRCodeUtil().createQRCodeImg(code);
//            System.out.println(code+"生成完成");
//        }

//        new QRCodeUtil().createQRCodeImg("weixin://wxpay/bizpayurl?pr=1rkmB6E");
//        String str[] = {"ELEM2501000100", "ELEM2501000101", "ELEM2501000102", "ELEM2501000103", "ELEM2501000104", "ELEM2501000105", "ELEM2501000106", "ELEM2501000107", "ELEM2501000108", "ELEM2501000109", "ELEM250100010A", "ELEM250100010B", "ELEM250100010C", "ELEM250100010D", "ELEM250100010E", "ELEM250100010F", "ELEM2501000110", "ELEM2501000111", "ELEM2501000112", "ELEM2501000113", "ELEM2501000114", "ELEM2501000115", "ELEM2501000116", "ELEM2501000117", "ELEM2501000118", "ELEM2501000119", "ELEM250100011A", "ELEM250100011B", "ELEM250100011C", "ELEM250100011D", "ELEM250100011E", "ELEM250100011F", "ELEM2501000120", "ELEM2501000121", "ELEM2501000122", "ELEM2501000123", "ELEM2501000124", "ELEM2501000125", "ELEM2501000126", "ELEM2501000127", "ELEM2501000128", "ELEM2501000129", "ELEM250100012A", "ELEM250100012B", "ELEM250100012C", "ELEM250100012D", "ELEM250100012E", "ELEM250100012F", "ELEM2501000130", "ELEM2501000131", "ELEM2501000132", "ELEM2501000133", "ELEM2501000134", "ELEM2501000135", "ELEM2501000136", "ELEM2501000137", "ELEM2501000138", "ELEM2501000139", "ELEM250100013A", "ELEM250100013B", "ELEM250100013C", "ELEM250100013D", "ELEM250100013E", "ELEM250100013F", "ELEM2501000140", "ELEM2501000141", "ELEM2501000142", "ELEM2501000143", "ELEM2501000144", "ELEM2501000145", "ELEM2501000146", "ELEM2501000147", "ELEM2501000148", "ELEM2501000149", "ELEM250100014A", "ELEM250100014B", "ELEM250100014C", "ELEM250100014D", "ELEM250100014E", "ELEM250100014F", "ELEM2501000150", "ELEM2501000151", "ELEM2501000152", "ELEM2501000153", "ELEM2501000154", "ELEM2501000155", "ELEM2501000156", "ELEM2501000157", "ELEM2501000158", "ELEM2501000159", "ELEM250100015A", "ELEM250100015B", "ELEM250100015C", "ELEM250100015D", "ELEM250100015E", "ELEM250100015F", "ELEM2501000160", "ELEM2501000161", "ELEM2501000162", "ELEM2501000163", "ELEM2501000164", "ELEM2501000165", "ELEM2501000166", "ELEM2501000167", "ELEM2501000168", "ELEM2501000169", "ELEM250100016A", "ELEM250100016B", "ELEM250100016C", "ELEM250100016D", "ELEM250100016E", "ELEM250100016F", "ELEM2501000170", "ELEM2501000171", "ELEM2501000172", "ELEM2501000173", "ELEM2501000174", "ELEM2501000175", "ELEM2501000176", "ELEM2501000177", "ELEM2501000178", "ELEM2501000179", "ELEM250100017A", "ELEM250100017B", "ELEM250100017C", "ELEM250100017D", "ELEM250100017E", "ELEM250100017F", "ELEM2501000180", "ELEM2501000181", "ELEM2501000182", "ELEM2501000183", "ELEM2501000184", "ELEM2501000185", "ELEM2501000186", "ELEM2501000187", "ELEM2501000188", "ELEM2501000189", "ELEM250100018A", "ELEM250100018B", "ELEM250100018C", "ELEM250100018D", "ELEM250100018E", "ELEM250100018F", "ELEM2501000190", "ELEM2501000191", "ELEM2501000192", "ELEM2501000193", "ELEM2501000194", "ELEM2501000195", "ELEM2501000196", "ELEM2501000197", "ELEM2501000198", "ELEM2501000199", "ELEM250100019A", "ELEM250100019B", "ELEM250100019C", "ELEM250100019D", "ELEM250100019E", "ELEM250100019F", "ELEM25010001A0", "ELEM25010001A1", "ELEM25010001A2", "ELEM25010001A3", "ELEM25010001A4", "ELEM25010001A5", "ELEM25010001A6", "ELEM25010001A7", "ELEM25010001A8", "ELEM25010001A9", "ELEM25010001AA", "ELEM25010001AB", "ELEM25010001AC", "ELEM25010001AD", "ELEM25010001AE", "ELEM25010001AF", "ELEM25010001B0", "ELEM25010001B1", "ELEM25010001B2", "ELEM25010001B3", "ELEM25010001B4", "ELEM25010001B5", "ELEM25010001B6", "ELEM25010001B7", "ELEM25010001B8", "ELEM25010001B9", "ELEM25010001BA", "ELEM25010001BB", "ELEM25010001BC", "ELEM25010001BD", "ELEM25010001BE", "ELEM25010001BF", "ELEM25010001C0", "ELEM25010001C1", "ELEM25010001C2", "ELEM25010001C3", "ELEM25010001C4", "ELEM25010001C5", "ELEM25010001C6", "ELEM25010001C7"};
//        for (String code : str) {
//            new QRCodeUtil().createQRCodeImg(code);
//            System.out.println(code + "生成完成");
//        }
        String str = "http://a.app.qq.com/o/simple.jsp?pkgname=com.yuemee.app.main";
        new QRCodeUtil().createQRCodeImg(str);
        System.out.println(str + "生成完成");
    }
}

